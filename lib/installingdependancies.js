"use strict";/**
 * function to allow installation of dependancies
 */const path=require("path"),util=require("util"),{exec}=require("child_process"),execPromisified=util.promisify(exec),{chooseConsoleColorText,colorString}=require("./utils/consolecolors"),colorSet=require("./utils/colorsets"),installingDependancies=async a=>{const{appName:b,framework:c,database:d,orm:e,testFramework:f,expectationLibrary:g}=a,h=path.basename(b);// database adapters used in SQL.
let i;"sqlite"===d.toLowerCase()?i="sqlite3":"postgres"===d.toLowerCase()&&(i="pg");const j=await execPromisified("echo \"\n Going to start installing dependancies now\"");chooseConsoleColorText(colorSet.log,`\n ${j.stdout}`);const k=["body-parser","dotenv","cors","bcrypt",`${c.toLowerCase()}`,`${e&&"No ORM"!==e?`${e.toLowerCase()}`:""}`,`${i?`${i}`:""}`],l=[`${f?`${f.toLowerCase()}`:""}`,`${g?`${g.toLowerCase()}`:""}`,"chai-http","nyc","@babel/core","@babel/preset-env","@babel/cli","@babel/node","standard"];// install @ dependancy
// install all dev dependancies
// install all if not added to node_modules
k.forEach(async a=>{await execPromisified(`cd ${h} && npm install ${a}`),chooseConsoleColorText(colorSet.normal,`\n Installed ${colorString(colorSet.log,`${a}`)} in the application.`)}),l.forEach(async a=>{await execPromisified(`cd ${h} && npm install -D ${a}`),chooseConsoleColorText(colorSet.normal,`\n Installed dev dependancy ${colorString(colorSet.log,`${a}`)} in the application.`)}),execPromisified(`cd ${h} && 
    git init && 
    git add . && 
    git commit -m "Set up application"`),process.on("exit",async()=>{await execPromisified(`cd ${h} && npm run fix`),await execPromisified(`cd ${h} && npm install`),chooseConsoleColorText(colorSet.normal,`\n Clean up installs`)})};module.exports=installingDependancies;