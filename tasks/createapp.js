var fs = require("fs");

// Package file data.
const packageJson = {
    "name": "My App",
    "version": "1.0.0",
    "main": "index.js",
    "scripts": {
        "start": "node ./src/index.js",
        "test": "run test"
    }
}

const gitIgnore = `# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage

# nyc test coverage
.nyc_output

# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# TypeScript v1 declaration files
typings/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env

# next.js build output
.next

# dist file ignored
dist/`

function writeFiles() {
    const packageJsonData = JSON.stringify(packageJson, null, "\t");
    const gitIgnoreData = JSON.stringify(gitIgnore);
    fs.writeFile('pak.json', packageJsonData, function (err) {
        if (err) throw err
    });
    console.log('------successfully written to package.json file------');
    fs.writeFile('.gitignore', JSON.parse(gitIgnoreData), function (err) {
        if (err) throw err;
    });
    console.log('----------Written data to .gitignore file-------------');
}

function createFiles(name) {
    if (!name) {
        console.log('------You must add the name of your application-------');
    }
    const foldersToAdd = ['src/controllers', 'src/routes', 'src/middlewares', 'src/config', 'src/models', 'test']
    const folders = foldersToAdd.map(folder => `${name}/${folder}`);
    folders.forEach(function (folder) {
        fs.mkdir(folder, { recursive: true }, (err) => {
            if (err) throw err
            fs.createWriteStream(`${name}/package.json`);
            fs.createWriteStream(`${name}/.gitignore`);
            fs.createWriteStream(`${name}/.env`);
            fs.createWriteStream(`${name}/README.md`);
            const files = `${folder}/index.js`;
            fs.createWriteStream(files);
            console.log(`----------created file----- ${files}------`);
        });
    });
    return writeFiles(name);
}

// Creating the main application
const createApp = (name) => {
    createFiles(name);
}
// async function createApp(name) {

// };

// Convert into a module that can be used as CLI
exports = module.exports = createApp;
// createApp("kemboi")